swagger: '2.0'
info:
  version: v1
  title: Stockonnect Partner API
  description: A public API for partners to integrate with the ByBox Stockonnect System.
host: test.bybox.com
basePath: /Stockonnect/Api/PartnerApi
schemes:
  - http
  - https
paths:
  /Skus:
    get:
      tags:
        - Sku
      summary: Searches for Skus matching the specified parameters
      operationId: Sku_Search
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: searchTerm.identifier
          in: query
          required: false
          type: string
        - name: searchTerm.door
          in: query
          required: false
          type: string
        - name: searchTerm.location
          in: query
          required: false
          type: string
        - name: searchTerm.barcode
          in: query
          required: false
          type: string
        - name: searchTerm.suspended
          in: query
          required: false
          type: boolean
        - name: searchTerm.page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: 'Search was successful, and results were returned'
          schema:
            $ref: '#/definitions/PagedList[SkuResultRepresentation]'
        '400':
          description: No search criteria specified
        '500':
          description: Returned in the case of an unexpected fault
    put:
      tags:
        - Sku
      summary: Updates an existing sku Sku with the supplied identifier.
      operationId: Sku_Update
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: sku
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/UpdateSku'
      responses:
        '200':
          description: Sku was accepted for update
        '400':
          description: Supplied identifier or description is missing
        '404':
          description: Identifier specified does not exist
        '500':
          description: Returned in the case of an unexpected fault
    post:
      tags:
        - Sku
      summary: Creates a new Sku with the supplied identifier and description
      operationId: Sku_Create
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: sku
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/CreateSku'
      responses:
        '200':
          description: Sku accepted for creation
        '400':
          description: Supplied identifier or description is missing
        '409':
          description: Identifier specified is already in use
        '500':
          description: Returned in the case of an unexpected fault
  '/clients/{clientIdentifier}/Destinations/{destinationIdentifier}':
    get:
      tags:
        - Destinations
      summary: Gets a destination.
      operationId: Destinations_GetDestinationWithClientIdentifier
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: clientIdentifier
          in: path
          description: The client Identifier to look the destination for
          required: true
          type: string
        - name: destinationIdentifier
          in: path
          description: The destination Identifier to look for
          required: true
          type: string
      responses:
        '200':
          description: Destionation accepted for processing
          schema:
            $ref: '#/definitions/DestinationRepresentation'
        '403':
          description: Not authorized to make the requested call
        '404':
          description: The destination was not found.
        '500':
          description: Returned in the case of an unexpected fault
  '/users/{identifier}/packagecollectionassignments':
    post:
      tags:
        - Users
      summary: assign a package to a user
      operationId: Users_AssignPackage
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: identifier
          in: path
          required: true
          type: string
        - name: assignment
          in: body
          required: true
          schema:
            $ref: '#/definitions/PackageCollectionAssignment'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '202':
          description: Accepted the assignment of a package for collection by the user
        '403':
          description: Not authorized to make the requested call
        '404':
          description: >-
            Unable to find one or more of the requested user, location or
            package
        '500':
          description: Returned in the case of an unexpected fault
    delete:
      tags:
        - Users
      summary: Unassign a package from a user
      operationId: Users_UnassignPackage
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: identifier
          in: path
          description: ''
          required: true
          type: string
        - name: unassignment.barcode
          in: query
          required: false
          type: string
        - name: unassignment.locationIdentifier
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '202':
          description: Accepted the unassignment of a package for collection by the user
        '403':
          description: Not authorized to make the requested call
        '404':
          description: >-
            Unable to find one or more of the requested user, location or
            package
        '500':
          description: Returned in the case of an unexpected fault
  '/users/{identifier}':
    get:
      tags:
        - Users
      summary: get a users details via their identifier within the callers group id
      operationId: Users_ByIdentifier
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: identifier
          in: path
          description: the unique (within group) identifier for the user to be found
          required: true
          type: string
      responses:
        '200':
          description: Found the user
          schema:
            $ref: '#/definitions/UserRepresentation'
        '403':
          description: Not authorized to make the requested call
        '404':
          description: >-
            Unable to find the user for the given identifier within the group
            associated with the caller
        '500':
          description: Returned in the case of an unexpected fault
  '/Skus/{identifier}':
    get:
      tags:
        - Sku
      summary: Returns the Sku that has the specified identifier.
      operationId: Sku_Get
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: identifier
          in: path
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Returned the sku that has the specified identifier
          schema:
            $ref: '#/definitions/SkuResultRepresentation'
        '404':
          description: Identifier specified does not exist
        '500':
          description: Returned in the case of an unexpected fault
  /Orders/job:
    post:
      tags:
        - Orders
      summary: Creates a new job order with the supplied order reference.
      operationId: Orders_CreateJobOrder
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: jobOrder
          in: body
          description: The details for the job order to be created.
          required: true
          schema:
            $ref: '#/definitions/JobOrderRepresentation'
      responses:
        '200':
          description: Order accepted for processing
          schema:
            $ref: '#/definitions/JobOrderRepresentation'
        '400':
          description: >-
            The supplied order failed validation due to invalid fields and/or
            missing mandatory fields.  Details of the validation failure(s) will
            be returned in the response.
        '403':
          description: Not authorized to make the requested call
        '409':
          description: The supplied order reference is already in use.
        '500':
          description: Returned in the case of an unexpected fault
  /Orders/tech:
    post:
      tags:
        - Orders
      summary: Creates a new tech order with the supplied order reference.
      operationId: Orders_CreateTechOrder
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: techOrder
          in: body
          description: The details for the tech order to be created.
          required: true
          schema:
            $ref: '#/definitions/TechOrderRepresentation'
      responses:
        '200':
          description: Order accepted for processing
          schema:
            $ref: '#/definitions/TechOrderRepresentation'
        '400':
          description: >-
            The supplied order failed validation due to invalid fields and/or
            missing mandatory fields.  Details of the validation failure(s) will
            be returned in the response.
        '403':
          description: Not authorized to make the requested call
        '409':
          description: The supplied order reference is already in use.
        '500':
          description: Returned in the case of an unexpected fault
  '/clients/{clientIdentifier}/destinations/{destinationIdentifier}':
    put:
      tags:
        - Destinations
      summary: Updates an existing destination.
      operationId: Destinations_UpdateDestinationWithClientIdentifier
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: createLocationArgs
          in: body
          description: The details for the destination to be created.
          required: true
          schema:
            $ref: '#/definitions/DestinationRepresentation'
        - name: clientIdentifier
          in: path
          description: The client Identifier to update the destination for
          required: true
          type: string
        - name: destinationIdentifier
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Destionation accepted for processing
          schema:
            $ref: '#/definitions/DestinationRepresentation'
        '400':
          description: >-
            The supplied destination failed validation due to invalid fields
            and/or missing mandatory fields.  Details of the validation
            failure(s) will be returned in the response.
        '403':
          description: Not authorized to make the requested call
        '409':
          description: The supplied destination reference is already in use.
        '500':
          description: Returned in the case of an unexpected fault
  '/clients/{clientIdentifier}/skus/{skuIdentifier}/doors':
    get:
      tags:
        - Sku
      summary: Returns the doors to assigned to a specified SKU.
      operationId: Sku_GetDoorsWithClientIdentifier
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: clientIdentifier
          in: path
          required: true
          type: string
        - name: skuIdentifier
          in: path
          required: true
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: Returned the doors to assigned to a specified SKU
          schema:
            $ref: '#/definitions/PagedList[SkuDoorAssignmentRepresentation]'
        '404':
          description: SKU with specified identifier does not exist
        '500':
          description: Returned in the case of an unexpected fault
  '/clients/{clientIdentifier}/skus/{skuIdentifier}/locations':
    get:
      tags:
        - Sku
      summary: >-
        Finds the available quantities of a SKU by location, optionally
        filtering results.
      operationId: Sku_LocationSearch
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: clientIdentifier
          in: path
          description: The identifier of the client that owns the SKU.
          required: true
          type: string
        - name: skuIdentifier
          in: path
          description: The identifier for the SKU.
          required: true
          type: string
        - name: criteria.clientIdentifier
          in: query
          required: false
          type: string
        - name: criteria.skuIdentifier
          in: query
          required: false
          type: string
        - name: criteria.radiusFilter.longitude
          in: query
          required: false
          type: number
          format: double
        - name: criteria.radiusFilter.latitude
          in: query
          required: false
          type: number
          format: double
        - name: criteria.radiusFilter.searchRadiusKm
          in: query
          required: false
          type: number
          format: double
        - name: criteria.page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: 'Search was successful, and results were returned'
          schema:
            $ref: '#/definitions/PagedList[SkuLocationSearchResultRepresentation]'
        '400':
          description: No search criteria specified or invalid client identifier given
        '500':
          description: Returned in the case of an unexpected fault
  '/location/{locationIdentifier}/doors/{doorIdentifier}/packages/{barcode}':
    get:
      tags:
        - Packages
      summary: >-
        Returns the Package identified by the specified barcode and location
        identifier.
      operationId: Packages_Get
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: locationIdentifier
          in: path
          required: true
          type: string
        - name: doorIdentifier
          in: path
          required: true
          type: string
        - name: barcode
          in: path
          required: true
          type: string
      responses:
        '200':
          description: >-
            Returned the package identified by the specified barcode, location
            identifier and door identifier
          schema:
            $ref: '#/definitions/PackageResultRepresentation'
        '404':
          description: Identifier specified does not exist
        '500':
          description: Returned in the case of an unexpected fault
  /users:
    get:
      tags:
        - Users
      summary: search for one or more users
      operationId: Users_Search
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: searchArgs.identifier
          in: query
          required: false
          type: string
        - name: searchArgs.username
          in: query
          required: false
          type: string
        - name: searchArgs.barcode
          in: query
          required: false
          type: string
        - name: searchArgs.orderReference
          in: query
          required: false
          type: string
        - name: searchArgs.doorName
          in: query
          required: false
          type: string
        - name: searchArgs.locationName
          in: query
          required: false
          type: string
        - name: searchArgs.suspended
          in: query
          required: false
          type: boolean
        - name: searchArgs.page
          in: query
          required: false
          type: integer
          format: int32
        - name: searchArgs.pageSize
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: Found and returned a result
          schema:
            $ref: '#/definitions/UserListRepresentation'
        '403':
          description: Not authorized to make the requested call
        '404':
          description: Search parameters returned no result
        '500':
          description: Returned in the case of an unexpected fault
    put:
      tags:
        - Users
      summary: Update an existing User
      operationId: Users_UpdateUser
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: userDetails
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/UserRepresentation'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '202':
          description: User update request accepted
        '400':
          description: >-
            The supplied user details has missing mandatory fields or user to be
            updated doesn't exist
        '403':
          description: Not authorized to make the requested call
        '409':
          description: >-
            The supplied user details had either a duplicate username,
            identifier or both
        '500':
          description: Returned in the case of an unexpected fault
    post:
      tags:
        - Users
      summary: Create a new user
      operationId: Users_CreateUser
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: userDetails
          in: body
          description: the details for the user to be created
          required: true
          schema:
            $ref: '#/definitions/UserRepresentation'
        - name: selfManageActivation
          in: query
          description: >-
            if set to true the activation code will not be generated and the
            user activation email will not be sent to the user
          required: false
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            type: object
        '202':
          description: User creation request accepted
        '400':
          description: >-
            The supplied user details has missing mandatory fields or activation
            code generation failed
        '403':
          description: Not authorized to make the requested call
        '409':
          description: >-
            The supplied user details had either a duplicate username,
            identifier or both
        '500':
          description: Returned in the case of an unexpected fault
  '/Orders/{orderReference}/user':
    post:
      tags:
        - Orders
      summary: Assigns the user to the order.
      operationId: Orders_AssignUser
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: orderReference
          in: path
          description: ''
          required: true
          type: string
        - name: userIdentifier
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/UserIdentifierRepresentation'
      responses:
        '200':
          description: The assign request was accepted for processing.
          schema:
            $ref: '#/definitions/UserIdentifierRepresentation'
        '400':
          description: The supplied order or user was not found.
        '403':
          description: Not authorized to make the requested call
        '500':
          description: Returned in the case of an unexpected fault
    delete:
      tags:
        - Orders
      summary: Unassigns the user from the order.
      operationId: Orders_UnassignUser
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: orderReference
          in: path
          description: ''
          required: true
          type: string
        - name: userIdentifier
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/UserIdentifierRepresentation'
      responses:
        '200':
          description: The unassign request was accepted for processing.
          schema:
            $ref: '#/definitions/UserIdentifierRepresentation'
        '400':
          description: The supplied order or user was not found.
        '403':
          description: Not authorized to make the requested call
        '500':
          description: Returned in the case of an unexpected fault
  '/users/{identifier}/activationcode':
    get:
      tags:
        - Users
      summary: >-
        generate an activation code for a user that hasn't already got an
        activation code
      operationId: Users_GetActivationCode
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: identifier
          in: path
          description: the identifier of the user to create an activation code for
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '202':
          description: Generated an activation code
        '400':
          description: >-
            The supplied user identifier was invalid or the user already has an
            activation code
        '403':
          description: Not authorized to make the requested call
        '500':
          description: Returned in the case of an unexpected fault
  '/Orders/{orderReference}':
    get:
      tags:
        - Orders
      summary: search for orders using the specified parameters
      operationId: Orders_GetOrder
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: orderReference
          in: path
          description: The order identifier
          required: true
          type: string
      responses:
        '200':
          description: Found and returned a result
          schema:
            $ref: '#/definitions/OrderSearchResult'
        '403':
          description: Not authorized to make the requested call
        '404':
          description: Order not found
        '500':
          description: Returned in the case of an unexpected fault
    delete:
      tags:
        - Orders
      summary: search for orders using the specified parameters
      operationId: Orders_CancelOrder
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: orderReference
          in: path
          description: The order identifier
          required: true
          type: string
      responses:
        '200':
          description: Cancelled the order
        '403':
          description: Not authorized to make the requested call
        '404':
          description: Order not found
        '500':
          description: Returned in the case of an unexpected fault
  /Orders/inventory:
    post:
      tags:
        - Orders
      summary: Creates a new inventory order with the supplied order reference.
      operationId: Orders_CreateInventoryOrder
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: inventoryOrder
          in: body
          description: The details for the inventory order to be created.
          required: true
          schema:
            $ref: '#/definitions/InventoryOrderRepresentation'
      responses:
        '200':
          description: Order accepted for processing
          schema:
            $ref: '#/definitions/InventoryOrderRepresentation'
        '400':
          description: >-
            The supplied order failed validation due to invalid fields and/or
            missing mandatory fields.  Details of the validation failure(s) will
            be returned in the response.
        '403':
          description: Not authorized to make the requested call
        '409':
          description: The supplied order reference is already in use.
        '500':
          description: Returned in the case of an unexpected fault
  '/clients/{clientIdentifier}/Orders/{orderReference}':
    get:
      tags:
        - Orders
      summary: search for orders using the specified parameters
      operationId: Orders_GetOrderByReference
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: orderReference
          in: path
          description: The order identifier
          required: true
          type: string
        - name: clientIdentifier
          in: path
          description: The client identifier
          required: true
          type: string
      responses:
        '200':
          description: Found and returned a result
          schema:
            $ref: '#/definitions/OrderSearchResult'
        '403':
          description: Not authorized to make the requested call
        '404':
          description: Order not found
        '500':
          description: Returned in the case of an unexpected fault
  '/skus/{skuIdentifier}/locations':
    get:
      tags:
        - Sku
      summary: >-
        Finds the available quantities of a SKU by location, optionally
        filtering results.
      operationId: Sku_LocationSearchByIdentifier
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: skuIdentifier
          in: path
          description: The identifier for the SKU.
          required: true
          type: string
        - name: criteria.clientIdentifier
          in: query
          required: false
          type: string
        - name: criteria.skuIdentifier
          in: query
          required: false
          type: string
        - name: criteria.radiusFilter.longitude
          in: query
          required: false
          type: number
          format: double
        - name: criteria.radiusFilter.latitude
          in: query
          required: false
          type: number
          format: double
        - name: criteria.radiusFilter.searchRadiusKm
          in: query
          required: false
          type: number
          format: double
        - name: criteria.page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: 'Search was successful, and results were returned'
          schema:
            $ref: '#/definitions/PagedList[SkuLocationSearchResultRepresentation]'
        '400':
          description: No search criteria specified
        '500':
          description: Returned in the case of an unexpected fault
  '/Destinations/{destinationIdentifier}':
    get:
      tags:
        - Destinations
      summary: Gets a destination.
      operationId: Destinations_GetDestinationWithoutClientIdentifier
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: destinationIdentifier
          in: path
          description: The destination Identifier to look for
          required: true
          type: string
      responses:
        '200':
          description: Destionation accepted for processing
          schema:
            $ref: '#/definitions/DestinationRepresentation'
        '403':
          description: Not authorized to make the requested call
        '404':
          description: The destination was not found.
        '500':
          description: Returned in the case of an unexpected fault
    put:
      tags:
        - Destinations
      summary: Updates an existing destination.
      operationId: Destinations_UpdateDestinationWithoutClientIdentifier
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: createLocationArgs
          in: body
          description: The details for the destination to be created.
          required: true
          schema:
            $ref: '#/definitions/DestinationRepresentation'
        - name: destinationIdentifier
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Destionation accepted for processing
          schema:
            $ref: '#/definitions/DestinationRepresentation'
        '400':
          description: >-
            The supplied destination failed validation due to invalid fields
            and/or missing mandatory fields.  Details of the validation
            failure(s) will be returned in the response.
        '403':
          description: Not authorized to make the requested call
        '409':
          description: The supplied destination reference is already in use.
        '500':
          description: Returned in the case of an unexpected fault
  '/Orders/{orderReference}/skus':
    post:
      tags:
        - Orders
      summary: Adds the SKU(s) to the order.
      operationId: Orders_AddSkus
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: orderReference
          in: path
          description: ''
          required: true
          type: string
        - name: skus
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/SkuAssignmentRepresentation'
      responses:
        '200':
          description: The assign request was accepted for processing.
          schema:
            $ref: '#/definitions/SkuAssignmentRepresentation'
        '400':
          description: The supplied order or SKU was not found.
        '403':
          description: Not authorized to make the requested call
        '500':
          description: Returned in the case of an unexpected fault
    delete:
      tags:
        - Orders
      summary: Removes the SKU(s) from the order.
      operationId: Orders_RemoveSkus
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: orderReference
          in: path
          description: ''
          required: true
          type: string
        - name: skus
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/SkuAssignmentRepresentation'
      responses:
        '200':
          description: The unassign request was accepted for processing.
          schema:
            $ref: '#/definitions/SkuAssignmentRepresentation'
        '400':
          description: The supplied order or SKU was not found.
        '403':
          description: Not authorized to make the requested call
        '500':
          description: Returned in the case of an unexpected fault
  '/skus/{identifier}/doors':
    get:
      tags:
        - Sku
      summary: Returns the doors to assigned to a specified SKU.
      operationId: Sku_GetDoors
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: identifier
          in: path
          description: ''
          required: true
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: Returned the doors to assigned to a specified SKU
          schema:
            $ref: '#/definitions/PagedList[SkuDoorAssignmentRepresentation]'
        '404':
          description: SKU with specified identifier does not exist
        '500':
          description: Returned in the case of an unexpected fault
  /Destinations:
    post:
      tags:
        - Destinations
      summary: Creates a new destination.
      operationId: Destinations_CreateDestinationWithoutClientIdentifier
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: createLocationArgs
          in: body
          description: The details for the destination to be created.
          required: true
          schema:
            $ref: '#/definitions/DestinationRepresentation'
      responses:
        '200':
          description: Destionation accepted for processing
          schema:
            $ref: '#/definitions/DestinationRepresentation'
        '400':
          description: >-
            The supplied destination failed validation due to invalid fields
            and/or missing mandatory fields.  Details of the validation
            failure(s) will be returned in the response.
        '403':
          description: Not authorized to make the requested call
        '409':
          description: The supplied destination reference is already in use.
        '500':
          description: Returned in the case of an unexpected fault
  '/Skus/{identifier}/doors':
    post:
      tags:
        - Sku
      summary: Assigns the specifed Sku to a door at a particular Location.
      operationId: Sku_AssignDoor
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: identifier
          in: path
          description: ''
          required: true
          type: string
        - name: association
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/SKUDoorIdentifierAssociation'
      responses:
        '200':
          description: Assign request was accepted for processing
        '404':
          description: 'Identifier of the sku, or the specified door does not exist'
        '500':
          description: Returned in the case of an unexpected fault
  '/clients/{clientIdentifier}/destinations':
    post:
      tags:
        - Destinations
      summary: Creates a new destination.
      operationId: Destinations_CreateDestinationWithClientIdentifier
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: createLocationArgs
          in: body
          description: The details for the destination to be created.
          required: true
          schema:
            $ref: '#/definitions/DestinationRepresentation'
        - name: clientIdentifier
          in: path
          description: The client Identifier to create the destination for
          required: true
          type: string
      responses:
        '200':
          description: Destionation accepted for processing
          schema:
            $ref: '#/definitions/DestinationRepresentation'
        '400':
          description: >-
            The supplied destination failed validation due to invalid fields
            and/or missing mandatory fields.  Details of the validation
            failure(s) will be returned in the response.
        '403':
          description: Not authorized to make the requested call
        '409':
          description: The supplied destination reference is already in use.
        '500':
          description: Returned in the case of an unexpected fault
  '/Skus/{identifier}/packages':
    post:
      tags:
        - Sku
      summary: Assigns the specifed Sku to a Package at a particular Location.
      operationId: Sku_AssignPackage
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: identifier
          in: path
          description: ''
          required: true
          type: string
        - name: package
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/SkuPackageArgs'
      responses:
        '200':
          description: Assign request was accepted for processing
        '400':
          description: The specified location or barcode does not exist
        '404':
          description: >-
            Identifier of the sku, or the specified location or barcode does not
            exist
        '500':
          description: Returned in the case of an unexpected fault
    delete:
      tags:
        - Sku
      summary: >-
        Unassigns the specifed Sku from a specified Package in the specified
        Location
      operationId: Sku_UnassignPackage
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: identifier
          in: path
          description: ''
          required: true
          type: string
        - name: package
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/SkuUnassignArgs'
      responses:
        '200':
          description: Unassign request was accepted for processing
        '400':
          description: The specified location or barcode does not exist
        '404':
          description: >-
            identifier of the sku, or the specified location or barcode does not
            exist
        '500':
          description: Returned in the case of an unexpected fault
  '/Orders/{orderReference}/packages':
    post:
      tags:
        - Orders
      summary: Adds packages to an order.
      operationId: Orders_AddPackages
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: orderReference
          in: path
          description: ''
          required: true
          type: string
        - name: packages
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/PackageAssignmentRepresentation'
      responses:
        '200':
          description: The assign request was accepted for processing.
          schema:
            $ref: '#/definitions/SkuAssignmentRepresentation'
        '400':
          description: The supplied order or package was not found.
        '403':
          description: Not authorized to make the requested call
        '500':
          description: Returned in the case of an unexpected fault
    delete:
      tags:
        - Orders
      summary: Removes the package(s) from the order.
      operationId: Orders_RemovePackages
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: orderReference
          in: path
          description: ''
          required: true
          type: string
        - name: packages
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/PackageAssignmentRepresentation'
      responses:
        '200':
          description: The unassign request was accepted for processing.
          schema:
            $ref: '#/definitions/SkuAssignmentRepresentation'
        '400':
          description: The supplied order or package was not found.
        '403':
          description: Not authorized to make the requested call
        '500':
          description: Returned in the case of an unexpected fault
  /Orders:
    get:
      tags:
        - Orders
      summary: search for orders using the specified parameters
      operationId: Orders_Search
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: searchParameters.excludeInventoryOrders
          in: query
          required: false
          type: boolean
        - name: searchParameters.excludeJobOrders
          in: query
          required: false
          type: boolean
        - name: searchParameters.orderReference
          in: query
          required: false
          type: string
        - name: searchParameters.assignedUser
          in: query
          required: false
          type: string
        - name: searchParameters.creatingUser
          in: query
          required: false
          type: string
        - name: searchParameters.orderStatus
          in: query
          required: false
          type: string
          enum:
            - UnKnown
            - Draft
            - Assigned
            - InProgress
            - Completed
            - Cancelled
        - name: searchParameters.page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: Found and returned a result
          schema:
            $ref: '#/definitions/OrderListRepresentation'
        '403':
          description: Not authorized to make the requested call
        '500':
          description: Returned in the case of an unexpected fault
  '/Locations/{locationIdentifier}/skus':
    get:
      tags:
        - Locations
      summary: Get a list of skus and quantites at a specified location.
      operationId: Locations_ListSkusAtLocation
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: locationIdentifier
          in: path
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Location found and stock levels returned
          schema:
            $ref: '#/definitions/LocationInventoryReport'
        '400':
          description: No location identifier specified
        '404':
          description: The location doesn't exist
        '500':
          description: Returned in the case of an unexpected fault
  /packages:
    get:
      tags:
        - Packages
      summary: Returns a paged snapshot of all packages and their associated data.
      operationId: Packages_Search
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: searchTerm.location
          in: query
          required: false
          type: string
        - name: searchTerm.trackingNumber
          in: query
          required: false
          type: string
        - name: searchTerm.page
          in: query
          required: false
          type: integer
          format: int32
        - name: searchTerm.pageSize
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: 'Search was successful, and results were returned'
          schema:
            $ref: '#/definitions/PagedList[PackageResultRepresentation]'
        '400':
          description: No search criteria specified
        '500':
          description: Returned in the case of an unexpected fault
definitions:
  CountryRepresentation:
    type: object
    properties:
      name:
        type: string
      code:
        type: string
  'PagedList[SkuLocationSearchResultRepresentation]':
    type: object
    properties:
      resourceList:
        type: array
        items:
          $ref: '#/definitions/SkuLocationSearchResultRepresentation'
      totalResults:
        format: int32
        type: integer
      totalPages:
        format: int32
        type: integer
      page:
        format: int32
        type: integer
  UserRepresentation:
    type: object
    properties:
      identifier:
        type: string
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      emailAddress:
        type: string
      roles:
        type: string
      suspended:
        type: boolean
  TechOrderRepresentation:
    type: object
    properties:
      orderReference:
        type: string
      user:
        type: string
      skus:
        type: array
        items:
          $ref: '#/definitions/TechOrderSku'
      destinationIdentifier:
        type: string
      notes:
        type: string
      clientIdentifier:
        type: string
  PackageCollectionAssignment:
    type: object
    properties:
      barcode:
        type: string
      locationIdentifier:
        type: string
      preadvise:
        type: boolean
      notes:
        type: string
  UserListRepresentation:
    type: object
    properties:
      resourceList:
        type: array
        items:
          $ref: '#/definitions/UserRepresentation'
      totalResults:
        format: int32
        type: integer
      totalPages:
        format: int32
        type: integer
      page:
        format: int32
        type: integer
  JobOrderRepresentation:
    type: object
    properties:
      orderReference:
        type: string
      user:
        type: string
      packages:
        type: array
        items:
          $ref: '#/definitions/OrderPackage'
  PackageSearchCriteria:
    type: object
    properties:
      location:
        type: string
      trackingNumber:
        type: string
      page:
        format: int32
        type: integer
      pageSize:
        format: int32
        type: integer
  PackageResultRepresentation:
    type: object
    properties:
      barcode:
        type: string
      location:
        type: string
      door:
        type: string
      at:
        format: date-time
        type: string
      user:
        type: string
      doorDetails:
        $ref: '#/definitions/DoorDetailsRepresentation'
      locationDetails:
        $ref: '#/definitions/LocationDetailsRepresentation'
  SkuLocationSearchCriteria:
    type: object
    properties:
      clientIdentifier:
        type: string
      skuIdentifier:
        type: string
      radiusFilter:
        $ref: '#/definitions/SearchRadiusFilter'
      page:
        format: int32
        type: integer
  PackageAssignmentRepresentation:
    type: object
    properties:
      packages:
        type: array
        items:
          $ref: '#/definitions/OrderPackage'
  OrderSku:
    type: object
    properties:
      sku:
        type: string
      quantity:
        format: int32
        type: integer
      location:
        type: string
      barcodes:
        type: array
        items:
          type: string
  OrderSearchResult:
    type: object
    properties:
      orderReference:
        type: string
      orderType:
        type: string
      assignedTo:
        type: string
      createdBy:
        type: string
      status:
        type: string
  SkuLocationSearchResultRepresentation:
    type: object
    properties:
      location:
        $ref: '#/definitions/LocationRepresentation'
      availableQuantity:
        format: int32
        type: integer
  'PagedList[SkuResultRepresentation]':
    type: object
    properties:
      resourceList:
        type: array
        items:
          $ref: '#/definitions/SkuResultRepresentation'
      totalResults:
        format: int32
        type: integer
      totalPages:
        format: int32
        type: integer
      page:
        format: int32
        type: integer
  SkuResultRepresentation:
    type: object
    properties:
      name:
        type: string
      identifier:
        type: string
      description:
        type: string
      isSuspended:
        type: boolean
      packages:
        type: array
        items:
          $ref: '#/definitions/SkuResultItem'
  UserSearchArgs:
    type: object
    properties:
      orderReference:
        type: string
      username:
        type: string
      pageSize:
        format: int32
        type: integer
      identifier:
        type: string
      doorName:
        type: string
      barcode:
        type: string
      page:
        format: int32
        type: integer
      locationName:
        type: string
      suspended:
        type: boolean
  OrderListRepresentation:
    type: object
    properties:
      orders:
        type: array
        items:
          $ref: '#/definitions/OrderSearchResult'
      totalResults:
        format: int32
        type: integer
      totalPages:
        format: int32
        type: integer
      page:
        format: int32
        type: integer
  InventoryOrderRepresentation:
    type: object
    properties:
      orderReference:
        type: string
      user:
        type: string
      skus:
        type: array
        items:
          $ref: '#/definitions/OrderSku'
  LocationDetailsRepresentation:
    type: object
    properties:
      name:
        type: string
  PackageCollectionUnassignment:
    type: object
    properties:
      barcode:
        type: string
      locationIdentifier:
        type: string
  UserIdentifierRepresentation:
    type: object
    properties:
      user:
        type: string
  StockItem:
    type: object
    properties:
      skuIdentifier:
        type: string
      quantity:
        format: int32
        type: integer
  'PagedList[PackageResultRepresentation]':
    type: object
    properties:
      resourceList:
        type: array
        items:
          $ref: '#/definitions/PackageResultRepresentation'
      totalResults:
        format: int32
        type: integer
      totalPages:
        format: int32
        type: integer
      page:
        format: int32
        type: integer
  SearchRadiusFilter:
    type: object
    properties:
      longitude:
        format: double
        type: number
      latitude:
        format: double
        type: number
      searchRadiusKm:
        format: double
        type: number
  SkuUnassignArgs:
    type: object
    properties:
      location:
        type: string
      barcode:
        type: string
  OrderSearchParameters:
    type: object
    properties:
      excludeInventoryOrders:
        type: boolean
      excludeJobOrders:
        type: boolean
      orderReference:
        type: string
      assignedUser:
        type: string
      creatingUser:
        type: string
      orderStatus:
        enum:
          - UnKnown
          - Draft
          - Assigned
          - InProgress
          - Completed
          - Cancelled
        type: string
      page:
        format: int32
        type: integer
  SKUDoorIdentifierAssociation:
    type: object
    properties:
      skuIdentifier:
        type: string
      doorIdentifier:
        type: string
      minimumStockLevel:
        format: int32
        type: integer
  DoorRepresentation:
    type: object
    properties:
      identifier:
        type: string
      name:
        type: string
  DoorDetailsRepresentation:
    type: object
    properties:
      supportsJobOrders:
        type: boolean
      supportsInventoryOrders:
        type: boolean
  SkuDoorAssignmentRepresentation:
    type: object
    properties:
      door:
        $ref: '#/definitions/DoorRepresentation'
      location:
        $ref: '#/definitions/LocationRepresentation'
      minimumStockLevel:
        format: int32
        type: integer
  LocationRepresentation:
    type: object
    properties:
      identifier:
        type: string
      name:
        type: string
      longitude:
        format: double
        type: number
      latitude:
        format: double
        type: number
  SkuSearchCriteria:
    type: object
    properties:
      identifier:
        type: string
      door:
        type: string
      location:
        type: string
      barcode:
        type: string
      suspended:
        type: boolean
      page:
        format: int32
        type: integer
  DestinationRepresentation:
    type: object
    properties:
      name:
        type: string
      identifier:
        type: string
      latitude:
        format: double
        type: number
      longitude:
        format: double
        type: number
      address:
        $ref: '#/definitions/AddressRepresentation'
      notes:
        type: string
      suspended:
        type: boolean
      clientIdentifier:
        type: string
  SkuPackageArgs:
    type: object
    properties:
      location:
        type: string
      barcode:
        type: string
      preAdvise:
        type: boolean
  'PagedList[SkuDoorAssignmentRepresentation]':
    type: object
    properties:
      resourceList:
        type: array
        items:
          $ref: '#/definitions/SkuDoorAssignmentRepresentation'
      totalResults:
        format: int32
        type: integer
      totalPages:
        format: int32
        type: integer
      page:
        format: int32
        type: integer
  SkuAssignmentRepresentation:
    type: object
    properties:
      skus:
        type: array
        items:
          $ref: '#/definitions/OrderSku'
  UpdateSku:
    type: object
    properties:
      identifier:
        type: string
      description:
        type: string
      name:
        type: string
  LocationInventoryReport:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/StockItem'
  CreateSku:
    type: object
    properties:
      identifier:
        type: string
      description:
        type: string
      name:
        type: string
  TechOrderSku:
    type: object
    properties:
      skuIdentifier:
        type: string
      quantity:
        format: int32
        type: integer
  AddressRepresentation:
    type: object
    properties:
      address1:
        type: string
      address2:
        type: string
      address3:
        type: string
      address4:
        type: string
      address5:
        type: string
      postalCode:
        type: string
      country:
        $ref: '#/definitions/CountryRepresentation'
  SkuResultItem:
    type: object
    properties:
      location:
        type: string
      door:
        type: string
      barcode:
        type: string
  OrderPackage:
    type: object
    properties:
      barcode:
        type: string
      location:
        type: string
      door:
        type: string